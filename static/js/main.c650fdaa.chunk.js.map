{"version":3,"sources":["components/SectionWithForm/SectionWithForm.js","components/SearchFormBooks/SearchFormBooks.js","components/BookInfo/BookInfo.js","components/Book/Book.js","components/SearchResult/SearchResult.js","utils/api.js","components/Main/Main.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["SectionWithForm","props","className","title","onSubmit","children","SearchFormBooks","React","useState","input","setInput","categories","setCategories","sorting","setSorting","console","log","e","preventDefault","onSearch","type","onChange","target","value","label","BookInfo","src","alt","Book","to","onClick","Onclick","thumbnail","category","authors","SearchResult","result","cards","map","item","handleClick","volumeInfo","readingModes","image","imageLinks","id","clickMoreButton","onError","res","ok","json","Promise","reject","api","url","this","_url","params","cardLenght","fetch","method","then","Main","setCards","setParams","setResult","getAllCards","dataCard","items","totalItems","catch","err","exact","path","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c650fdaa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SectionWithForm.css\";\r\nfunction SectionWithForm(props) {\r\n  return (\r\n    <section className=\"search\">\r\n      <div className=\"forms-container\">\r\n        <h3 className=\"forms-container__title\">{props.title}</h3>\r\n        <form className=\"forms\" onSubmit={props.onSubmit}>\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SectionWithForm;\r\n","import React from \"react\";\r\nimport SectionWithForm from \"../SectionWithForm/SectionWithForm\";\r\nfunction SearchFormBooks(props) {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [categories, setCategories] = React.useState([]);\r\n  const [sorting, setSorting] = React.useState(\"relevance\");\r\n  console.log(\"input\", input);\r\n  console.log(\"categories\", categories);\r\n  console.log(\"sorting\", sorting);\r\n\r\n  function handleInput(e) {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  function handleCategories(e) {\r\n    setCategories(e.target.value);\r\n  }\r\n  function handleSorting(e) {\r\n    setSorting(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onSearch({\r\n      input,\r\n      categories,\r\n      sorting,\r\n    });\r\n  }\r\n  return (\r\n    <SectionWithForm title=\"Search for books\" onSubmit={handleSubmit}>\r\n      <div className=\"forms__input-container\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleInput}\r\n          className=\"forms__input\"\r\n        ></input>\r\n        <button className=\"forms__button\" type=\"submit\"></button>\r\n      </div>\r\n      <div className=\"forms__select-container\">\r\n        <p className=\"forms__paragraph\">\r\n          Categories\r\n          <select className=\"forms__select\" onChange={handleCategories}>\r\n            <option label=\"all\" value=\"\"></option>\r\n            <option label=\"art\" value=\"+subject:art\"></option>\r\n            <option label=\"biography\" value=\"+subject:biography\"></option>\r\n            <option label=\"computers\" value=\"+subject:computers\"></option>\r\n            <option label=\"history\" value=\"+subject:history\"></option>\r\n            <option label=\"medical\" value=\"+subject:medical\"></option>\r\n            <option label=\"poetry\" value=\"+subject:poetry\"></option>\r\n          </select>\r\n        </p>\r\n\r\n        <p className=\"forms__paragraph\">\r\n          Sorting by\r\n          <select className=\"forms__select\" onChange={handleSorting}>\r\n            <option>relevance</option>\r\n            <option>newest</option>\r\n          </select>\r\n        </p>\r\n      </div>\r\n    </SectionWithForm>\r\n  );\r\n}\r\n\r\nexport default SearchFormBooks;\r\n","import \"./BookInfo.css\";\r\nfunction BookInfo() {\r\n  return (\r\n    <section className=\"book-info\">\r\n      <div className=\"book-info__image-container\">\r\n        {\" \"}\r\n        <img\r\n          className=\"book-info__image\"\r\n          src=\"https://s1.livelib.ru/boocover/1000003390/200x305/88f8/boocover.jpg\"\r\n          alt=\"\"\r\n        ></img>\r\n      </div>\r\n      <div className=\"book-info__container\">\r\n        <p className=\"book-info__category\">Category</p>\r\n        <h3 className=\"book-info__title\">\r\n          Одним из ответов был такой: Скажите пожалуйста как описать\r\n          книгу— это на популярном сайте. Затем\r\n          поясняет: тут нужно не описание содержания а именно Внешности книги\r\n          =*** И ему отвечают: пишите как будто краткое содержание, характер\r\n          главного героя, и во что он вляпался (конфликт), яркие, запоминающиеся\r\n          моменты... и немного об авторе можно, и когда при каких\r\n          обстоятельствах была написанна книга!!! и цвет обложки-о чём примерно.\r\n          Так вот описать книгу это значит не описывать ее внешний вид (толстая,\r\n          тонкая, в мягкой обложке или твердой, ее цвет и т.п.) и даже не само\r\n          содержание книги, т.е. о чем она, а описать книгу это значит написать\r\n          — автор книги, ее название, выходные данные. Если с автором и\r\n          названием все понятно, то что такое выгодные данные книги? Выходные\r\n          данные — это 1) место выпуска издания; 2) имя издателя (название\r\n          изд-ва); 3) год выпуска издания.\r\n        </h3>\r\n        <p className=\"book-info__author\">Author</p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default BookInfo;\r\n","import \"./Book.css\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Book(props) {\r\n  return (\r\n  <Link to=\"/book-info\">\r\n      <div className=\"card\" onClick={props.Onclick}>\r\n      <img\r\n          className=\"card__image\"\r\n          src={`${props.thumbnail}`}\r\n          alt=\"обложка\"\r\n        ></img> \r\n        <div className=\"card__container\">\r\n          <p className=\"card__category\">{props.category}</p>\r\n          <h3 className=\"card__title\">{props.title}</h3>\r\n          <p className=\"card__author\">{props.authors}</p>\r\n        </div>\r\n      </div></Link> \r\n    \r\n  );\r\n}\r\n\r\nexport default Book;\r\n","import Book from \"../Book/Book\";\r\nfunction SearchResult(props) {\r\n  return (\r\n    <section className=\"search-result\">\r\n      <p className=\"found-result\">Found {props.result > 0 ? props.result : 0} result</p>\r\n      <div className=\"books\">\r\n        {props.cards.map((item) => (\r\n          <Book\r\n            onClick={props.handleClick}\r\n            key={item.id}\r\n            thumbnail={\r\n              item.volumeInfo.readingModes.image\r\n                ? item.volumeInfo.imageLinks.thumbnail\r\n                : \"http://s003.radikal.ru/i202/1405/45/86a3a577fba4.png\"\r\n            }\r\n            category={item.volumeInfo.categories}\r\n            authors={item.volumeInfo.authors}\r\n            title={item.volumeInfo.title}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={props.clickMoreButton} className=\"books__button\">\r\n        load more\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\nexport default SearchResult;\r\n","const onError = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(\"Сервер не доступен\");\r\n};\r\n\r\nclass Api {\r\n  constructor({url}) {\r\n    this._url = url;\r\n  }\r\n  getAllCards(params, cardLenght) {\r\n\r\n    return fetch(`${this._url}?q=intitle:${params.input}${params.categories}&orderBy=${params.sorting}&startIndex=${cardLenght}&maxResults=30&key=AIzaSyAbe9iw6fJbZ0hHutVp3sLrfV20kvtIiaQ`, {\r\n      method: \"GET\",\r\n      params: \"\", \r\n    }).then(onError);\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n  url: \"https://www.googleapis.com/books/v1/volumes\",\r\n\r\n});\r\n\r\nexport default api;\r\n","import React, { useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport SearchFormBooks from \"../SearchFormBooks/SearchFormBooks\";\r\n\r\nimport BookInfo from \"../BookInfo/BookInfo\";\r\nimport SearchResult from \"../SearchResult/SearchResult\";\r\nimport api from \"../../utils/api\";\r\nimport \"./Main.css\";\r\n\r\nfunction Main() {\r\n  const [cards, setCards] = useState([]);\r\n  const [params, setParams] = useState([]);\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  console.log(cards);\r\n  console.log(params);\r\n  function clickMoreButton() {\r\n    api\r\n      .getAllCards(params, cards.length)\r\n      .then((dataCard) => {\r\n        setCards([...cards, ...dataCard.items]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function onSearch(params) {\r\n    setParams(params);\r\n    api\r\n      .getAllCards(params, 0)\r\n      .then((dataCard) => {\r\n        setCards(dataCard.items);\r\n        setResult(dataCard.totalItems);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  function handleClick() {}\r\n\r\n  return (\r\n  \r\n      <>\r\n        <SearchFormBooks onSearch={onSearch}></SearchFormBooks>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <SearchResult\r\n              cards={cards}\r\n              result={result}\r\n              clickMoreButton={clickMoreButton}\r\n              handleClick={handleClick}\r\n            ></SearchResult>\r\n          </Route>\r\n          <Route path=\"/book-info\">\r\n            <BookInfo></BookInfo>\r\n          </Route>\r\n        </Switch>\r\n      </>\r\n  \r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import Main from \"../Main/Main\";\n// import { Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"content\">\n          <Main> </Main>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}